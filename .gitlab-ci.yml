stages:
  - version
  - build
  - upload
  - release

variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/gitdock"

release-version-creation:
  stage: version
  only:
    - tags
  script:
    - echo "VERSION=$(cat package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')" > version.env
  artifacts:
    reports:
      dotenv: version.env

build-windows:
  stage: build
  only:
    - tags
    - merge_requests
  tags:
    - windows
    - shared-windows
    - windows-1809
  before_script:
    - cup nodejs.install -y
  script:
    - npm install
    - npm run make -- --platform=win32
  artifacts:
    paths:
      - out/make
    expire_in: 1 hour

build-mac:
  stage: build
  only:
    - tags
    - merge_requests
  tags:
    - shared-macos-amd64
  image: macos-11-xcode-12
  script:
    - npm install -g npm@latest
    - npm install
    - brew install fakeroot && brew install dpkg && brew install rpm
    - npm run make -- --platform=darwin
  artifacts:
    paths:
      - out/make
    expire_in: 1 hour

build-linux:
  stage: build
  only:
    - tags
    - merge_requests
  tags:
    - linux
  image: node:latest
  script:
    - npm install -g npm@latest
    - npm install
    - apt-get update && apt-get -y install fakeroot && apt-get -y install dpkg && apt-get -y install rpm
    - npm run make -- --platform=linux
  artifacts:
    paths:
      - out/make
    expire_in: 1 hour

upload:
  stage: upload
  needs:
    - job: build-mac
      artifacts: true
    - job: build-linux
      artifacts: true
    - job: build-windows
      artifacts: true
    - job: release-version-creation
      artifacts: true
  image: curlimages/curl:latest
  only:
    - tags
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file out/make/GitDock-${VERSION}.dmg ${PACKAGE_REGISTRY_URL}/${VERSION}/GitDock.dmg
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file out/make/squirrel.windows/x64/GitDock.exe ${PACKAGE_REGISTRY_URL}/${VERSION}/GitDock.exe
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file out/make/rpm/x64/GitDock-${VERSION}-1.x86_64.rpm ${PACKAGE_REGISTRY_URL}/${VERSION}/GitDock.rpm
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file out/make/deb/x64/gitdock_${VERSION}_amd64.deb ${PACKAGE_REGISTRY_URL}/${VERSION}/GitDock.deb

release:
  stage: release
  needs:
    - job: build-mac
      artifacts: true
    - job: build-linux
      artifacts: true
    - job: build-windows
      artifacts: true
    - job: release-version-creation
      artifacts: true
    - upload
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  only:
    - tags
  except:
    - branches
  script:
    - echo "v$VERSION"
    - echo "${PACKAGE_REGISTRY_URL}/${VERSION}/GitDock.dmg"}
  release:
      name: "v$VERSION"
      tag_name: "v$VERSION"
      description: "v$VERSION"
      assets:
        links:
          - name: "MacOS"
            url: "${PACKAGE_REGISTRY_URL}/${VERSION}/GitDock.dmg"
          - name: "Windows"
            url: "${PACKAGE_REGISTRY_URL}/${VERSION}/GitDock.exe"
          - name: "Linux deb"
            url: "${PACKAGE_REGISTRY_URL}/${VERSION}/GitDock.deb"
          - name: "Linux rpm"
            url: "${PACKAGE_REGISTRY_URL}/${VERSION}/GitDock.rpm"
